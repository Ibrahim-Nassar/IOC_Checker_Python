[tool.poetry]
name = "ioc-checker"
version = "1.0.0"
description = "IOC Checker â€“ async threat-intel aggregator with Tk GUI"
license = "MIT"
authors = ["Ibrahim <ibrahim-ehab@live.com>"]
readme = "README.md"
packages = [{ include = "IOC_Checker_Python" }]

[tool.poetry.dependencies]
python = "^3.10"
httpx = "^0.27"
pydantic = "^2.7"
filelock = "^3.14"
requests-cache = "^1.2"
tldextract = "^5.0"
pytest = { version = "^8.0", optional = true }
pytest-asyncio = { version = "^0.23", optional = true }

[tool.poetry.extras]
test = ["pytest", "pytest-asyncio"]

[tool.poetry.scripts]
ioc-checker = "IOC_Checker_Python.ioc_checker:main"
ioc-checker-gui = "IOC_Checker_Python.ioc_gui_tk:run_gui"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.ruff]
line-length = 120

[tool.mypy]
strict = true

[tool.pytest.ini_options]
pythonpath = ["."]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
filterwarnings = [
    "ignore::RuntimeWarning:unittest.mock",
    "ignore::RuntimeWarning:unittest",
    "ignore:.*coroutine.*never awaited.*:RuntimeWarning",
    "ignore:.*unawaited coroutine.*:RuntimeWarning"
]
